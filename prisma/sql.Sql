-- Create Store table
CREATE TABLE Store (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  name VARCHAR(255),
  userId VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create Billboard table
CREATE TABLE Billboard (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  storeId VARCHAR(255),
  label VARCHAR(255),
  imageUrl VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (storeId) REFERENCES Store(id)
);

-- Create Category table
CREATE TABLE Category (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  storeId VARCHAR(255),
  billboardId VARCHAR(255),
  name VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (storeId) REFERENCES Store(id),
  FOREIGN KEY (billboardId) REFERENCES Billboard(id)
);


-- Create Order table
CREATE TABLE Orders (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  storeId VARCHAR(255),
  isPaid BOOLEAN DEFAULT FALSE,
  phone VARCHAR(255) DEFAULT '',
  address VARCHAR(255) DEFAULT '',
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (storeId) REFERENCES Store(id)
);

-- Create Size table
CREATE TABLE Size (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  storeId VARCHAR(255),
  name VARCHAR(255),
  value VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (storeId) REFERENCES Store(id)
);

-- Create Color table
CREATE TABLE Color (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  storeId VARCHAR(255),
  name VARCHAR(255),
  value VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (storeId) REFERENCES Store(id)
);

-- Create Product table
CREATE TABLE Product (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  storeId VARCHAR(255),
  categoryId VARCHAR(255),
  name VARCHAR(255),
  price DECIMAL,
  isFeatured BOOLEAN DEFAULT FALSE,
  isArchived BOOLEAN DEFAULT FALSE,
  sizeId VARCHAR(255),
  colorId VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (storeId) REFERENCES Store(id),
  FOREIGN KEY (categoryId) REFERENCES Category(id),
  FOREIGN KEY (sizeId) REFERENCES Size(id),
  FOREIGN KEY (colorId) REFERENCES Color(id)
);

-- Create OrderItem table (intermediary for many-to-many relationship)
CREATE TABLE OrderItem (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  orderId VARCHAR(255),
  productId VARCHAR(255),
  FOREIGN KEY (orderId) REFERENCES Orders(id),
  FOREIGN KEY (productId) REFERENCES Product(id)
);

-- Create Image table
CREATE TABLE Image (
  id VARCHAR(255) PRIMARY KEY DEFAULT UUID(),
  productId VARCHAR(255),
  url VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (productId) REFERENCES Product(id) ON DELETE CASCADE
);